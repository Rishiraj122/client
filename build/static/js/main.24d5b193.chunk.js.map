{"version":3,"sources":["components/Header.js","pages/Register.js","pages/Logout.js","components/Notice.js","components/NoticeDisplay.js","pages/FrontPage.js","pages/StudentLogin.js","pages/StudentDetails.js","components/AdminNotice.js","components/RoomAllotment.js","components/AllottedStudents.js","components/VendorDisplay.js","components/RoomClean.js","components/MyBill.js","components/GenerateReport.js","App.js","index.js"],"names":["Header","class","href","type","id","Register","App","Notice","item","React","Component","FrontPage","className","role","onClick","window","location","src","useState","email","setEmail","password","setPassword","event","a","preventDefault","fetch","method","headers","body","JSON","stringify","response","json","data","user","localStorage","setItem","alert","onSubmit","value","onChange","e","target","required","placeholder","RoomAllotment","notAllotted","path","element","StudentLogin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24d5b193.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(){\n    return <>\n    <nav class=\"sticky-top navbar navbar-expand-lg navbar-dark\">\n    <a class=\"navbar-brand\" href=\"/\"><i class=\"nav-icon fas fa-building fa-1x\"></i> HMS</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/\">Home</a>\n            </li>\n        </ul>\n    </div>\n</nav>\n    </>\n}\n\nexport default Header;","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Header from '../components/Header'\n\nfunction Register() {\n\tconst navigate = useNavigate()\n\n\tconst [name, setName] = useState('') //the first value is current state and second value is function used to update our state\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n  const login=()=>{\n    window.location.href='/login';\n  }\n\n\tasync function registerUser(event) {\n\t\tevent.preventDefault()\n\n\t\tconst response = await fetch('https://hms-nist.herokuapp.com/api/register', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await response.json()\n\n\t\tif (data.status === 'ok') {\n\t\t\tnavigate('/login') // if registration is successfull \n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t<Header />\n\t\t<div className=\"box\">\n\t\t\t<h1>Register</h1>\n\t\t\t<p>Create your Profile!</p>\n\t\t\t<form onSubmit={registerUser}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"&#xf007;  Fullname\"\n\t\t\t\t\tclass=\"input-control rounded-pill\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tplaceholder=\"&#xf0e0;  E-mail\"\n\t\t\t\t\tclass=\"input-control rounded-pill\"\n\t\t\t\t\trequired\n\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"&#xf023;  Password\"\n\t\t\t\t\tclass=\"input-control rounded-pill\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input class=\"btn btn-dark input-control rounded-pill\" type=\"submit\" value=\"Register\" />\n\t\t\t</form>\n      <button class=\"btn btn-light btn-control rounded-pill\" onClick={login}>Login</button>\n\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Register\n","import React from 'react'\nimport Header from '../components/Header.js'\n\nfunction App(){\n\n    const logout=()=>{\n        window.localStorage.clear();\n        window.location.href='/login'\n    }\n    return(\n        <div>\n        <Header/>\n        <button class=\"btn btn-dark rounded-pill\" onClick={logout}>Logout</button>\n        </div>  \n    )\n}\n\nexport default App","import React, {useEffect,useState} from 'react'\nimport axios from 'axios'\nimport Header from './Header.js'\nimport jwt from 'jsonwebtoken'\n\nfunction Notice () {\n\n    const [name,setName] = useState('')\n    const [noticetitle,setNoticetite] = useState('')\n    const [notice,setNotice] = useState('')\n\n    const noticePage = () =>{\n        window.location.href='/notice';\n    }\n\n    //Publish Notice\n    axios({\n        method: 'get',\n        url: 'https://api.github.com/users/hacktivist123',\n      });\n\n    async function publishNotice(event){\n        event.preventDefault()\n        const response = await fetch('https://hms-nist.herokuapp.com/api/notice',{\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json',\n            },\n            body: JSON.stringify({\n                name,\n                noticetitle,\n                notice,\n                notices:[]\n            }),\n        })\n        const data=await response.json()\n        if (data.status == 'ok') {\n            alert('Notice Published')\n\t\t}\n    }\n\n    useEffect(() => { //useEffect react hook to tell React that \n        //components need to do something on render\n        const token = localStorage.getItem('token');\n        if(!token) {\n            const user = jwt.decode(token) // for authentication\n            window.location.href=\"/login\"\n            // history.push('/login'); //if authentication fails load the login page\n        }\n    })\n\n\n    return(\n        <div>\n        <Header />\n        <section class=\"box container-fluid\">\n            <h1>Publish Notice</h1>\n            <form onSubmit={publishNotice}>\n            <input\n\t\t\t\t\tvalue={noticetitle}\n                    onChange={(e) => setNoticetite(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"Notice Title\"\n                    class=\"input-control2 rounded-pill\"\n                    required\n\t\t\t\t/>\n\t\t\t\t<br />\n                <input\n\t\t\t\t\tvalue={name}\n                    onChange={(e) => setName(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"Undersigned Name\"\n                    class=\"input-control2 rounded-pill\"\n                    required\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<textarea\n\t\t\t\t\tvalue={notice}\n                    onChange ={(e) => setNotice(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"Notice\"\n                    class=\"input-control2 rounded\"\n                    style={{height:\"150px\"}}\n                    required\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input className=\"btn btn-dark rounded-pill input-control2\" type=\"submit\"  placeholder=\"&#xf062; Publish\" value=\"Publish\" onClick={{noticePage}}/>\n\t\t\t</form>\n            </section>\n\n        </div>\n    )\n}\n\nexport default Notice","import React from 'react';\nimport Header from './Header.js'\n\nconst item=[];\n\nexport default class Fetch extends React.Component{\n\n    state={\n        loading: true,\n        person: null,\n    }\n\n    async componentDidMount(){\n        const url=\"https://hms-nist.herokuapp.com/api/notice\";\n        const response = await fetch(url);\n        const data = await response.json();\n        for(let i=data.user.length-1;i>=-1;i--){\n            this.setState({person: data, loading: false})\n            item.push(data.user[i]);\n            console.log(data.user[0])\n        }\n    }\n\n    render(){\n        return <div>\n        <Header />\n            <h1>Notice Board</h1>\n            <p>Updates on upcoming events, important announcements and other reminders.</p>\n            <div>{item.map(i => \n            <div class= \"alert notice-box\">\n                <h6 className=\"notice-title\"><strong> {i.noticetitle}</strong></h6>\n                <hr className=\"notice-hr\"/>\n                <p className=\"notice\"><i className=\"icon fas fa-calendar fa-1x\"></i> <i>{i.date}</i></p>\n                <p className=\"notice-text\">{i.notice}</p>\n                <p className=\"notice\"><strong>By </strong><i>{i.name}</i></p>\n            </div>\n            )}</div>\n        </div>\n    }\n}","import React from \"react\";\nimport \"../frontpage.css\"\nimport \"bootstrap/dist/js/bootstrap.js\"\n// import $ from \"jquery\"\n// import Popper from \"popper.js\"\n\nfunction FrontPage(){\n\n\tconst features =()=>{\n\t\twindow.location.href=\"#features\"\n\t}\n\t\n    return(\n\t\t<div>\n\t\t\n\t\t{/*NAVBAR*/}\n\t\t<nav className=\"sticky-top navbar navbar-expand-lg navbar-dark\">\n            <div className=\"container-fluid\">\n\t\t\t<a className=\"navbar-brand\" href=\"/\"><i class=\"nav-icon fas fa-building fa-1x\"></i> HMS</a>\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n                <ul className=\"navbar-nav\">\n                  <li className=\"nav-item\">\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n                  </li>\n\t\t\t\t  <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                      Login\n                    </a>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                      <li><a className=\"dropdown-item\" href=\"/login\">Staff</a></li>\n                      <li><a className=\"dropdown-item\" href=\"/studentlogin\">Student</a></li>\n                    </ul>\n                  </li>\n                  <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                      Register\n                    </a>\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                      <li><a className=\"dropdown-item\" href=\"/register\">Staff</a></li>\n                      <li><a className=\"dropdown-item\" href=\"/studentregistration\">Student</a></li>\n                    </ul>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n\t\t{/*WELCOME*/}\n\t\t<section className=\"white-section container\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-lg-6\">\n\t\t\t\t\t<h1 className=\"big-heading\">Welcome!</h1>\n\t\t\t\t\t<p className=\"greeting-text\">The best place for students to stay!</p>\n\t\t\t\t\t<button className=\"btn-explore btn btn-dark btn-lg rounded-pill\" onClick={features}>Explore</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-6\">\n\t\t\t\t\t<img src=\"../images/hostel.png\"></img>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t\t\n\t\t{/*FEATURES*/}\n\t\t<section className=\"colored-section\" id=\"features\">\n\n\t\t<div className=\"row\">\n\t\t\t<h1>Key Features</h1>\n\t\t\t<div className=\"feature-box col-lg-4\">\n\t\t\t<i className=\"f-icon icon fas fa-bed fa-2x\"></i>\n\t\t\t<h3 className=\"feature-title\">Comfort</h3>\n\t\t\t<p>Self contained rooms with AC and wi-fi facilities.</p>\n\t\t\t</div>\n\n\t\t\t<div className=\"feature-box col-lg-4\">\n\t\t\t<i className=\"f-icon icon fas fa-briefcase-medical fa-2x\"></i>\n\t\t\t<h3 className=\"feature-title\">Hygiene</h3>\n\t\t\t<p>From food to laundry, cleanliness is our priority.</p>\n\t\t\t</div>\n\n\t\t\t<div className=\"feature-box col-lg-4\">\n\t\t\t<i className=\"f-icon icon fas fa-check-circle fa-2x\"></i>\n\t\t\t<h3 className=\"feature-title\">Safety</h3>\n\t\t\t<p>24X7 complete student security.</p> \n\t\t\t</div>\n\n\t\t\t<div className=\"feature-box col-lg-4\">\n\t\t\t<i className=\"f-icon icon fas fa-gift fa-2x\"></i>\n\t\t\t<h3 className=\"feature-title\">Events</h3>\n\t\t\t<p>Engaging activities for refreshment.</p>\n\t\t\t</div>\n\n\t\t\t<div className=\"feature-box col-lg-4\">\n\t\t\t<i className=\"f-icon icon fas fa-user fa-2x\"></i>\n\t\t\t<h3 className=\"feature-title\">Housekeeping</h3>\n\t\t\t<p>Friendly and interactive staff available for support.</p>\n\t\t\t</div>\n\n\t\t\t<div className=\"feature-box col-lg-4\">\n\t\t\t<i className=\"f-icon icon fas fa-desktop fa-2x\"></i>\n\t\t\t<h3 className=\"feature-title\">Efficient Management</h3>\n\t\t\t<p>Paperless management of hostel activities.</p> \n\t\t\t</div>\n\n\t\t</div>\n\t\t</section>\n\n\t\t{/*CONTACT AND INFORMATION*/}\n\t\t<footer className=\"container-fluid\">\n\t\t\t<div className=\"row information \">\n\t\t\t\t<div className=\"info-col col-lg-6\">\n\t\t\t\t\t<p className=\"info\">CONTACT</p>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<p className=\"info\"><i class=\"footer-icon icon fas fa-globe\"></i>303M HMS Street</p>\n\t\t\t\t\t<p className=\"info\"><i class=\"footer-icon icon fas fa-phone\"></i>+91 9876543210</p>\n\t\t\t\t\t<p className=\"info\"><i class=\"footer-icon icon fas fa-envelope\"></i>hms@gmail.com</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"info-col col-lg-6\">\n\t\t\t\t<p className=\"info\">WEBSITE CREATORS</p>\n\t\t\t\t<hr/>\n\t\t\t\t<p className=\"info\"><i class=\"footer-icon icon fas fa-user\"></i>Rishiraj Behera</p>\n\t\t\t\t<p className=\"info\"><i class=\"footer-icon icon fas fa-user\"></i>Shweta Anmesha Tripathy</p>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t<p className=\"copyright\">© Copyright 2022 All Rights Reserved</p>\n\t\t</footer>\n        </div>\n    )\n}\n\nexport default FrontPage","import { useState } from 'react'\nimport Header from '../components/Header.js'\n\nfunction App() {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n    const register=()=>{\n        window.location.href='/studentregistration'\n    }\n\n\tasync function loginUser(event) {\n\t\tevent.preventDefault()\n\n\t\tconst response = await fetch('https://hms-nist.herokuapp.com/api/studentlogin', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await response.json()\n\t\tif (data.user) {\n\t\t\tlocalStorage.setItem('token', data.user)\n\t\t\talert('Login successful')\n\t\t\twindow.location.href = '/studentdashboard'\n\t\t} else{\n\t\t\talert('Incorrect Password or Email')\n\t\t\twindow.location.href = '/studentlogin'\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t<Header />\n\t\t<div className=\"box\">\n\t\t\t<h1>Student Login</h1>\n\t\t\t<p>Welcome back! Log in to access your profile.</p>\n\t\t\t<form onSubmit={loginUser}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\trequired\n\t\t\t\t\tplaceholder=\"&#xf0e0;  E-mail\"\n\t\t\t\t\tclass=\"input-control rounded-pill\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\trequired\n\t\t\t\t\tplaceholder=\"&#xf023;  Password\"\n\t\t\t\t\tclass=\"input-control rounded-pill\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<a className=\"forgot-password\" href=\"/forgotpassword\"><p>Forgot Password?</p></a>\n\t\t\t\t<input class=\"btn btn-dark input-control rounded-pill\" type=\"submit\" value=\"Login\" />\n\t\t\t</form>\n            <button class=\"btn btn-control btn-light rounded-pill\" onClick={register}>Register</button><br/><br/>\n\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport Header from '../components/Header.js'\nimport jwt from 'jsonwebtoken'\n\nconst item=[];\n\n\nexport default class studentDetails extends React.Component{\n\nconstructor(props){\n    super(props);\n    this.state={\n        inputValue:'',\n    };\n}\n\nstate={\n    loading: true,\n    person: null,\n}\n\nasync componentDidMount(x){\n\n\n    //This Makes Sure That The Admin Has Logged In\n    const token = localStorage.getItem('token');\n    if(!token) {\n        const user = jwt.decode(token) // for authentication\n        window.location=\"/login\"; //if authentication fails load the login page\n    }\n    //\n\n    const url=\"https://hms-nist.herokuapp.com/api/studentlogin\";\n    const response = await fetch(url);\n    \n    const data = await response.json();\n    if(x!=null){\n\n        for(let i=0;i<data.user.length;i++){ // This will search for the \n            //particular student\n            this.setState({person: data, loading: false})\n            if(data.user[i].roll==x || data.user[i].name.toLowerCase()==x.toLowerCase() || \n                data.user[i].registration==x || \n                data.user[i].phone==x ||\n                data.user[i].email==x)\n                {\n                    item.length=0;\n                    item.push(data.user[i]);\n                    // console.log(item[0]);\n            }\n        }\n    }\n    else if(x==null){ //It will load everyone's data initially\n        for(let i=data.user.length-1;i>=0;i--){\n            this.setState({person: data, loading: false})\n            item.push(data.user[i]);\n            // console.log(data.user[0])\n        }\n    }\n}\n\nasync delete(value,value2,value3){\n    const roll={roll: value}\n    const room={room:value2}\n    const rid={rid: value3}\n    const response = await axios.post('https://hms-nist.herokuapp.com/api/studentdelete',roll);\n    const response2 = await axios.post('https://hms-nist.herokuapp.com/api/roomdeallocate',rid);\n    window.location.reload(false);\n}\n\nrefreshPage(){\n    window.location.reload();\n} \n\nupdateInputValue(evt) {\n    this.setState({\n        inputValue: evt.target.value\n    });\n    }\n\nrender(){\n    \n    return <div>\n    <Header/>\n        <h1>Student Details</h1>\n        <input className=\"search-bar rounded-pill\" id=\"number\" type=\"text\"  placeholder=\" &#xf002;  Search\"\n        onChange={(evt) => {var x=evt.target.value; this.componentDidMount(x) }} />\n        <button class=\"clr-btn btn btn-dark rounded-pill\" onClick={this.refreshPage}>Clear</button><br/><br/>\n        {this.state.loading || !this.state.person ? \n        <div>loading...</div> \n        :\n        <div>        \n            <div className=\"tbl\">\n            <table className=\"sortable css-serial table table-borderless table-sm\" style={{width:\"80%\", textAlign:\"center\", margin:\"1% auto\"}}>\n                <thead>\n                    <tr style={{backgroundColor:\"#46244C\",color:\"white\"}}>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Phone Number</th>\n                        <th>E-mail</th>\n                        <th>Address</th>\n                        <th>Gender</th>\n                        <th>DOB</th>\n                        <th>Aadhar Number</th>\n                        <th>Roll Number</th>\n                        <th>Registration Number</th>\n                        <th>Block</th>\n                        <th>Room</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>{item.map(student => \n                    <tr>\n                        <td></td>\n                        <td>{student.name}</td>\n                        <td>{student.phone}</td>\n                        <td>{student.email}</td>\n                        <td>{student.address}</td>\n                        <td>{student.gender}</td>\n                        <td>{student.dob}</td>\n                        <td>{student.aadhar}</td>\n                        <td>{student.roll}</td>\n                        <td>{student.registration}</td>\n                        <td>{student.block}</td>\n                        <td>{student.rid}</td>\n                        <td> <button className=\"btn btn-sm btn-light\" style={{paddingTop:\"4%\",marginTop:\"5%\"}}  onDoubleClick={()=>this.delete(student.roll,student.room,student.rid)}><i className=\"fas fa-ban\"></i> Remove</button><br/>\n                        </td>\n                    </tr>\n                    )}</tbody>\n            </table>\n            </div>\n            </div>\n        }\n    </div>\n}\n}","import React from 'react';\nimport axios from 'axios';\nimport Header from './Header.js'\nimport jwt from 'jsonwebtoken'\n\nconst item=[];\n\nexport default class Fetch extends React.Component{\n\n    state={\n        loading: true,\n        person: null,\n    }\n\n    async delete(value){\n        const nid={nid: value}\n        const response = await axios.post('https://hms-nist.herokuapp.com/api/noticedelete',nid);\n        window.location.reload(false);\n    }\n\n    async componentDidMount(){\n        \n        //To ensure the page is accessed by auth users\n        const token = localStorage.getItem('token');\n        if(!token) {\n            const user = jwt.decode(token) // for authentication\n            window.location='/login'; //if authentication fails load the login page\n        }\n\n        const url=\"https://hms-nist.herokuapp.com/api/notice\";\n        const response = await fetch(url);\n        const data = await response.json();\n        for(let i=data.user.length-1;i>=-1;i--){\n            this.setState({person: data, loading: false})\n            item.push(data.user[i]);\n            console.log(data.user[0])\n        }\n    }\n\n    render(){\n        return <div>\n        <Header/>\n            <h1>Notice Board</h1>\n            <p>Updates on upcoming events, important announcements and other reminders.</p>\n            <div>{item.map(i => \n            <div class= \"alert notice-box\">\n                <h6 className=\"notice-title\"><strong>{i.noticetitle}</strong></h6>\n                <hr className=\"notice-hr\"/>\n                <p className=\"notice\"><i className=\"icon fas fa-calendar fa-1x\"></i> <i>{i.date}</i></p>\n                <p  className=\"notice-text\">{i.notice}</p>\n                <p  className=\"notice\"><strong>By</strong> <i>{i.name}</i></p>\n                <button className=\"notice-btn btn btn-dark rounded-pill\" onDoubleClick={()=>this.delete(i.nid)}><i className=\"fas fa-trash fa-1x\"></i> Delete</button>\n            </div>\n            )}</div> \n        </div>\n    }\n}","import React from \"react\";\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Header from './Header.js'\nimport jwt from 'jsonwebtoken'\n\nfunction RoomAllotment() {\n\tconst navigate = useNavigate()\n\n\tconst [room, setRoom]= useState([])\n\tconst [roll, setRoll]=useState([])\n\tconst [room2, setRoom2]= useState([])\n\tconst [room3, setRoom3]=useState([])\n\tconst [room4, setRoom4]= useState([])\n\tconst [room5, setRoom5]=useState([])\n\tconst [room6, setRoom6]= useState([])\n\tconst [room7, setRoom7]=useState([])\n\tconst [room8, setRoom8]= useState([])\n\tconst [room9, setRoom9]=useState([])\n\tconst [room10, setRoom10]= useState([])\n\tconst [occupancy, setOccupancy] = useState([])\n\tconst [occupancy2, setOccupancy2] = useState([])\n\tconst [occupancy3, setOccupancy3] = useState([])\n\tconst [occupancy4, setOccupancy4] = useState([])\n\tconst [occupancy5, setOccupancy5] = useState([])\n\tconst [occupancy6, setOccupancy6] = useState([])\n\tconst [occupancy7, setOccupancy7] = useState([])\n\tconst [occupancy8, setOccupancy8] = useState([])\n\tconst [occupancy9, setOccupancy9] = useState([])\n\tconst [occupancy10, setOccupancy10] = useState([])\n\tconst [block, setBlock] = useState([])\n\tconst [rid1, setRid1] = useState([])\n\tconst [rid2, setRid2] = useState([])\n\tconst [rid3, setRid3] = useState([])\n\tconst [rid4, setRid4] = useState([])\n\tconst [rid5, setRid5] = useState([])\n\tconst [rid6, setRid6] = useState([])\n\tconst [rid7, setRid7] = useState([])\n\tconst [rid8, setRid8] = useState([])\n\tconst [rid9, setRid9] = useState([])\n\tconst [rid10, setRid10] = useState([])\n\t\n    const item=[];\n\n\tasync function registerUser(event) {\n\t\t\n\t\tevent.preventDefault()\n\n\t\tconst response = await fetch('https://hms-nist.herokuapp.com/api/allotroom', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n                roll,\n\t\t\t\tblock,\n\t\t\t\troom\n\t\t\t}),\n\t\t})\n\n\t\tconst response3 = await fetch('https://hms-nist.herokuapp.com/api/hostelbill',{\n\t\t\tmethod:'POST',\n\t\t\theaders:{\n\t\t\t\t'Content-Type':'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\troll,\n\t\t\t\thostelbill:2000\n\t\t\t})\n\t\t})\n\n\t\tconst data = await response.json()\n\t\tconst data3=await response3.json()\n\n\t\tif (data.status && data3.status=== 'ok') {\n\t\t\talert(\"Room Allotted\")\n\t\t\twindow.location.href=\"/AllottedStudents\" // if registration is successfull \n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tconst token = localStorage.getItem('token')\n\t\tif (token) {\n\t\t\tconst user = jwt.decode(token)\n\t\t\tif (!user) {\n\t\t\t\tlocalStorage.removeItem('token')\n\t\t\t\tnavigate('/studentlogin')\n\t\t\t} \n\n\t\t}\n\t\telse{\n\t\t\tnavigate('/studentlogin')\n\t\t}\n\t}, [])\n\n\tconst apiGet = (e)=>{\n\t\t\n\t\t// alert(e.target.value);\n\t\tconst token = localStorage.getItem('token')\n\t\tconst user = jwt.decode(token) //This contains the values of logged user..\n\t\t// console.log it to view\n\t\tlet flag=0;\n\t\tfetch('https://hms-nist.herokuapp.com/api/room')\n        .then((response)=>response.json())\n        .then((json)=>{\n            for(let i=0;i<json.user.length;i=i+1){\n\n\t\t\t\tif(json.user[i].occupancy<4 && e.target.value=='Girls Wing'){\n\t\t\t\t\t// if(flag==2){\n\t\t\t\t\t// \tbreak;\n\t\t\t\t\t// }\n\t\t\t\t\tif(json.user[i].block=='Girls Wing'){\n\n\t\t\t\t\t\tsetBlock(json.user[i].block);\n\n\t\t\t\t\t\tif(flag==0){\n\t\t\t\t\t\t\tsetRoom(json.user[i].room);\n\t\t\t\t\t\t\tsetRid1(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(flag==1 && json.user[i].room!=room){\n\t\t\t\t\t\t\tsetRoom2(json.user[i].room);\n\t\t\t\t\t\t\tsetRid2(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy2(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t} \n\t\t\t\t\t\telse if(flag==2 && json.user[i].room!=room2){\n\t\t\t\t\t\t\tsetRoom3(json.user[i].room);\n\t\t\t\t\t\t\tsetRid3(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy3(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t} \n\t\t\t\t\t\telse if(flag==3 && json.user[i].room!=room3){\n\t\t\t\t\t\t\tsetRoom4(json.user[i].room);\n\t\t\t\t\t\t\tsetRid4(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy4(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t} \n\t\t\t\t\t\telse if(flag==4 && json.user[i].room!=room4){\n\t\t\t\t\t\t\tsetRoom5(json.user[i].room);\n\t\t\t\t\t\t\tsetRid5(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy5(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t} \n\t\t\t\t\t\telse if(flag==5 && json.user[i].room!=room5){\n\t\t\t\t\t\t\tsetRoom6(json.user[i].room);\n\t\t\t\t\t\t\tsetRid6(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy6(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t} \n\t\t\t\t\t\telse if(flag==6 && json.user[i].room!=room6){\n\t\t\t\t\t\t\tsetRoom7(json.user[i].room);\n\t\t\t\t\t\t\tsetRid7(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy7(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(flag==7 && json.user[i].room!=room7){\n\t\t\t\t\t\t\tsetRoom8(json.user[i].room);\n\t\t\t\t\t\t\tsetRid8(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy8(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t} \n\t\t\t\t\t\telse if(flag==8 && json.user[i].room!=room8){\n\t\t\t\t\t\t\tsetRoom9(json.user[i].room);\n\t\t\t\t\t\t\tsetRid9(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy9(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}  \n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tsetRoom10(json.user[i].room);\n\t\t\t\t\t\t\tsetRid10(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy10(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// setAAroom(json.user[i].room);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t} else if(json.user[i].occupancy<4 && e.target.value=='Boys Wing'){\n\t\t\t\t\tif(json.user[i].block=='Boys Wing'){\n\n\t\t\t\t\t\tsetBlock(json.user[i].block);\n\n\t\t\t\t\t\tif(flag==0){\n\t\t\t\t\t\t\tsetRoom(json.user[i].room);\n\t\t\t\t\t\t\tsetRid1(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t} \n\t\t\t\t\t\telse if(flag==1 && json.user[i].room!=room){\n\t\t\t\t\t\t\tsetRoom2(json.user[i].room);\n\t\t\t\t\t\t\tsetRid2(json.user[i].rid);\n\t\t\t\t\t\t\tsetOccupancy2(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t} \n\t\t\t\t\t\telse if(flag==2 && json.user[i].room!=room2){\n\t\t\t\t\t\t\tsetRid3(json.user[i].rid);\n\t\t\t\t\t\t\tsetRoom3(json.user[i].room);\n\t\t\t\t\t\t\tsetOccupancy3(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(flag==3 && json.user[i].room!=room3){\n\t\t\t\t\t\t\tsetRid4(json.user[i].rid);\n\t\t\t\t\t\t\tsetRoom4(json.user[i].room);\n\t\t\t\t\t\t\tsetOccupancy4(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(flag==4 && json.user[i].room!=room4){\n\t\t\t\t\t\t\tsetRid5(json.user[i].rid);\n\t\t\t\t\t\t\tsetRoom5(json.user[i].room);\n\t\t\t\t\t\t\tsetOccupancy5(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(flag==5 && json.user[i].room!=room5){\n\t\t\t\t\t\t\tsetRid6(json.user[i].rid);\n\t\t\t\t\t\t\tsetRoom6(json.user[i].room);\n\t\t\t\t\t\t\tsetOccupancy6(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(flag==6 && json.user[i].room!=room6){\n\t\t\t\t\t\t\tsetRid7(json.user[i].rid);\n\t\t\t\t\t\t\tsetRoom7(json.user[i].room);\n\t\t\t\t\t\t\tsetOccupancy7(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(flag==7 && json.user[i].room!=room7){\n\t\t\t\t\t\t\tsetRid8(json.user[i].rid);\n\t\t\t\t\t\t\tsetRoom8(json.user[i].room);\n\t\t\t\t\t\t\tsetOccupancy8(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(flag==8 && json.user[i].room!=room8){\n\t\t\t\t\t\t\tsetRid9(json.user[i].rid);\n\t\t\t\t\t\t\tsetRoom9(json.user[i].room);\n\t\t\t\t\t\t\tsetOccupancy9(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(flag==9 && json.user[i].room!=room10){\n\t\t\t\t\t\t\tsetRid10(json.user[i].rid);\n\t\t\t\t\t\t\tsetRoom10(json.user[i].room);\n\t\t\t\t\t\t\tsetOccupancy10(json.user[i].occupancy);\n\t\t\t\t\t\t\tflag++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t\t\t}\n            }\n\t\t})\n\t\treturn {item}\t\n    }\n\n\treturn (\n\t\t<div>\n\t\t<Header/>\n\t\t<div className=\"box\">\n\t\t\t<h1>Room Allotment</h1>\n\t\t\t<form onSubmit={registerUser}>\n                <input\n\t\t\t\t\tvalue={roll}\n\t\t\t\t\tonChange={(e) => setRoll(e.target.value)}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tplaceholder=\"Roll Number\"\n\t\t\t\t\tclass=\"input-control rounded-pill\" \n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<select className=\"dropdown-text input-control rounded-pill\" id=\"dropdown\" onChange={apiGet}>\n\t\t\t\t\t\t<option value=\"Block\" disabled selected hidden>Block</option>\n\t\t\t\t\t\t<option value=\"Girls Wing\" >Girls Wing</option>\n\t\t\t\t\t\t<option value=\"Boys Wing\" >Boys Wing</option>\n\t\t\t\t</select>\n\t\t\t\t<br/>\n\t\t\t\t<select className=\"dropdown-text input-control rounded-pill\" id=\"dropdown\" onChange={(e)=>setRoom(e.target.value)}>\n\t\t\t\t\t\t<option value=\"Room\" disabled selected hidden>Room</option>\n\t\t\t\t\t\t<option value={room} >Room: {rid1}, Occupancy: {occupancy}</option>\n\t\t\t\t\t\t<option value={room2}>Room: {rid2}, Occupancy: {occupancy2}</option>\n\t\t\t\t\t\t<option value={room3}>Room: {rid3}, Occupancy: {occupancy3}</option>\n\t\t\t\t\t\t<option value={room4}>Room: {rid4}, Occupancy: {occupancy4}</option>\n\t\t\t\t\t\t<option value={room5}>Room: {rid5}, Occupancy: {occupancy5}</option>\n\t\t\t\t\t\t<option value={room6}>Room: {rid6}, Occupancy: {occupancy6}</option>\n\t\t\t\t\t\t<option value={room7}>Room: {rid7}, Occupancy: {occupancy7}</option>\n\t\t\t\t\t\t<option value={room8}>Room: {rid8}, Occupancy: {occupancy8}</option>\n\t\t\t\t\t\t<option value={room9}>Room: {rid9}, Occupancy: {occupancy9}</option>\n\t\t\t\t\t\t<option value={room10}>Room: {rid10}, Occupancy: {occupancy10}</option>\n\t\t\t\t</select>\n\t\t\t\t<br />\n\t\t\t\t<input class=\"input-control btn btn-dark rounded-pill\" type=\"submit\" value=\"Allot\"/>\n\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default RoomAllotment\n","import React from 'react';\nimport Header from './Header.js'\nimport jwt from 'jsonwebtoken'\n\nconst item=[];\nconst notAllotted=[];\n\nexport default class AllottedStudents extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            inputValue:'',\n        };\n    }\n\n    state={\n        loading: true,\n        person: null,\n    }\n\n    async componentDidMount(x){\n\n        //To ensure it is auth\n        const token = localStorage.getItem('token');\n        if(!token) {\n            const user = jwt.decode(token) // for authentication\n            window.location=\"/login\" //if authentication fails load the login page\n        }\n        //\n\n        const url=\"https://hms-nist.herokuapp.com/api/studentlogin\";\n        const response = await fetch(url);\n        \n        const data = await response.json();\n        if(x!=null){\n\n            for(let i=0;i<data.user.length;i++){ // This will search for the \n                //particular student\n                this.setState({person: data, loading: false})\n                if(data.user[i].room==x ||  \n                    data.user[i].block==x || \n                    data.user[i].phone==x ||\n                    data.user[i].name.toLowerCase()==x.toLowerCase())\n                    {\n                        item.length=0;\n                        item.push(data.user[i]);\n                        console.log(item[0]);\n                }\n            }\n        }\n        else if(x==null){ //It will load everyone's data initially\n            for(let i=data.user.length-1;i>=0;i--){\n                this.setState({person: data, loading: false})\n                if(data.user[i].room!=null){\n                    item.push(data.user[i]);\n                    console.log(data.user[0])\n                }\n                else if(data.user[i].room==null){\n                    notAllotted.push(data.user[i]);\n                }\n            }\n        }\n    }\n\n    refreshPage(){\n        window.location.reload();\n    } \n\n    updateInputValue(evt) {\n        this.setState({\n          inputValue: evt.target.value\n        });\n      }\n    \n    render(){\n        return <div>\n            <Header/>\n            <h1>Allotted Students</h1>\n\n            <input class=\"search-bar rounded-pill\" type=\"text\" placeholder=\" &#xf002;  Search\"\n            onChange={(evt) => {var x=evt.target.value; \n            this.componentDidMount(x) }} />\n\n            <button class=\"clr-btn btn btn-dark rounded-pill\" onClick={this.refreshPage}>Clear</button>\n            <br/><br/>\n                \n            <div className=\"tbl\">\n                    <table class=\"css-serial table table-borderless table-sm\" style={{width:\"60%\", margin:\"0 auto\"}}>\n                    <thead>\n                        <tr style={{backgroundColor:\"#46244C\",color:\"white\"}}>\n                            <th>#</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Roll Number</th>\n                            <th scope=\"col\">Phone Number</th>\n                            <th scope=\"col\">Block</th>\n                            <th scope=\"col\">Room</th>\n                        </tr>\n                    </thead>\n                        <tbody>{item.map(user => \n                            <tr scope=\"row\">\n                                <td></td>\n                                <td>{user.name}</td>\n                                <td>{user.roll}</td>\n                                <td>{user.phone}</td>\n                                <td>{user.block}</td>\n                                <td>{user.rid}</td>\n                            </tr>\n                        )}</tbody>             \n                    </table> \n                    </div>\n                    <br/><br/>               \n            \n            <h1>Unallotted Students</h1>\n            <div className=\"tbl\">\n                <table class=\"css-serial table table-borderless table-sm\" style={{width:\"60%\", textAlign:\"center\",margin:\"2% auto\"}}>\n                    <thead >\n                    <tr style={{backgroundColor:\"#46244C\",color:\"white\"}}>\n                        <th>#</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Roll Number</th>\n                        <th scope=\"col\">Phone Number</th>\n                        <th scope=\"col\">Aadhar</th>\n                        <th scope=\"col\">Gender</th>\n                    </tr>\n                </thead>\n                     <tbody>{notAllotted.map(user2 => \n                        <tr scope=\"row\">\n                            <td></td>\n                            <td>{user2.name}</td>\n                            <td>{user2.roll}</td>\n                            <td>{user2.phone}</td>\n                            <td>{user2.aadhar}</td>\n                            <td>{user2.gender}</td>\n                        </tr>\n                    )}</tbody>             \n                </table>   \n                </div>\n        </div>\n    }\n}","import React from \"react\";\nimport Header from \"./Header\";\n\nconst item=[];\n\nexport default class Fetch extends React.Component{\n\n    state={\n        loading: true,\n        person: null,\n    }\n\n    async componentDidMount(){\n        const url=\"https://hms-nist.herokuapp.com/api/vendor\";\n        const response = await fetch(url);\n        const data = await response.json();\n        for(let i=data.user.length-1;i>=-1;i--){\n            this.setState({person: data, loading: false})\n            item.push(data.user[i]);\n            console.log(data.user[0])\n        }\n    }\n\n    render(){\n        return <div>\n            <Header />\n            <center><h1>Purchase History</h1></center>\n            <br/>\n\n            <div className=\"container-fluid\">\n                <table className=\"table table-borderless table-responsive\" style={{width:\"60%\", textAlign:\"left\",margin:\"0 auto 5% auto\"}}>\n                \n                <thead>\n                <tr style={{backgroundColor:\"#46244C\",color:\"white\"}}>\n                    <th>Date & Time</th>\n                    <th>Vendor</th>\n                    <th>Items Bought</th>\n                    <th>Amount Paid</th>\n                </tr>\n                </thead>\n                <tbody>{item.map(i =>\n                <tr>\n                    <td>{i.date}</td>\n                    <td>{i.name}</td>\n                    <td>{i.fooditem}</td>\n                    <td><strong>₹</strong> {i.payment} /-</td>\n                </tr>\n                )}</tbody>\n\n            </table>\n            </div>\n        </div>\n    }\n}","import React from \"react\";\nimport Header from './Header'\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken'\n\nconst item=[];\n\nexport default class Fetch extends React.Component{\n\n    state={\n        loading: true,\n        person: null,\n    }\n\n    async componentDidMount(){\n\n        //For auth access\n        const token = localStorage.getItem('token');\n        if(!token) {\n            const user = jwt.decode(token) // for authentication\n            window.location.href=\"/login\"\n            // history.push('/login'); //if authentication fails load the login page\n        }\n        //\n\n        const url=\"https://hms-nist.herokuapp.com/api/clean\";\n        const response = await fetch(url);\n        const data = await response.json();\n        let i = 0;\n\n        while(i<=data.user.length){\n            this.setState({person: data, loading: false})\n            if(true){\n                item.push(data.user[i]);\n            }           \n            i++;\n        }\n    }\n\n    async delete(value){\n        const room={room: value}\n        const response = await axios.post('https://hms-nist.herokuapp.com/api/deleteclean',room);\n        window.location.reload(false);\n    }\n\n    goBack(){\n        window.location.href=\"/staffdashboard\"\n    }\n\n    render(){\n        return(\n            <div>\n                <Header/>\n                <h1>Room Clean Requests</h1>\n                <div>\n                    {item.map(i=>\n                    <div style={{marginBottom:\"2%\"}}>\n                         <p><strong>Room:</strong> {i.room}, <strong>Message:</strong>{i.clean}</p> \n                         <button className=\"btn btn-light rounded-pill\" onClick={()=>this.delete(i.room)}>Room Cleaned</button>\n                    </div>   \n                    )}\n                </div>\n                <button className=\"btn-control btn btn-dark rounded-pill\" onClick={()=>this.goBack()}><i className=\"fas fa-arrow-left\"></i>  Go Back</button>\n            </div>\n        )\n    }\n\n}\n","import React,{useEffect, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport Header from './Header'\n\nfunction loadScript(src) {\n    return new Promise((resolve) => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n      script.onload = () => {\n        resolve(true);\n      };\n      script.onerror = () => {\n        resolve(false);\n      };\n      document.body.appendChild(script);\n    });\n  }\n  \nconst MyBill=()=>{\n    const navigate=useNavigate();\n    const [messbill, setMessbill]=useState('');\n    const [hostelbill, setHostelbill]=useState('');\n    const [roll, setRoll]=useState('');\n    const [roomFee, setRoomFee]=useState('');\n    const [messFee, setMessFee]=useState('');\n\n    useEffect(()=>{\n        const token=localStorage.getItem('token');\n        if(token){\n            const user = jwt.decode(token)\n            if(!user){\n                localStorage.removeItem('token');\n                navigate('/login')\n            }\n            getBill();\n        }\n        else{\n            navigate('/login')\n        }\n    })\n\n    const goBack=()=>{\n        window.location.href=\"/studentdashboard\"\n    }\n\n    const getBill=()=>{\n        const token = localStorage.getItem('token');\n        const user = jwt.decode(token)\n        fetch('https://hms-nist.herokuapp.com/api/mybill',)\n        .then((response)=>response.json())\n        .then((json)=>{\n            for(let i=0;i<json.user.length;i=i+1){\n                if(user.roll==json.user[i].roll){\n                    console.log(user.roll);\n                    setRoll(user.roll);\n                    setHostelbill(json.user[i].hostelbill);\n                    setMessbill(json.user[i].messbill);\n                }\n            }\n        })\n    }\n\n    //For Hostel Fee Payment\n\n    async function showRazorpay() {\n        const res = await loadScript(\n          \"https://checkout.razorpay.com/v1/checkout.js\"\n        );\n    \n        if (!res) {\n          alert(\"Razorpay SDK failed to load. Are you online?\");\n          return;\n        }\n    \n        const data = await fetch(\"https://hms-nist.herokuapp.com/api/razorpay\", {\n            method: \"POST\",\n            headers:{\n                'Content-Type':'application/json',\n            },\n                body: JSON.stringify({\n                    amount:hostelbill,\n            })\n        }).then((t) => t.json());\n    \n        console.log(data);\n    \n        const options = {\n          key: \"rzp_test_0tpemkHKm5K1Bc\",\n          currency: data.currency,\n          amount: roomFee*100,\n          order_id: data.id,\n          name: \"Hostel Fees\",\n          description: \"Amount To Be Paid For Hostel Mess Service\",\n          handler: function (response) {\n            // alert(response.razorpay_payment_id);\n            // alert(response.razorpay_order_id);\n            // alert(response.razorpay_signature);\n            deductAmount();\n            async function deductAmount(event){\n                const response = await fetch('https://hms-nist.herokuapp.com/api/billpayed',{\n                    method: 'POST',\n                    headers:{\n                        'Content-Type':'application/json',\n                    },\n                    body: JSON.stringify({\n                        roomFee,\n                        roll\n                    })\n                })\n        \n                const data = await response.json()\n        \n                if(data.status=='ok'){\n                    alert(\"Fees Paid\");\n                    window.location.href=\"mybill\"\n                }\n            }\n          },\n          prefill: {\n            name: \"Your Name\",\n            email: \"email@example.com\",\n            phone_number: \"1234567890\",\n          },\n        };\n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n      }\n\n      //For Mess Fee Payment Functions\n      async function showRazorpayMess() {\n        const res = await loadScript(\n          \"https://checkout.razorpay.com/v1/checkout.js\"\n        );\n    \n        if (!res) {\n          alert(\"Razorpay SDK failed to load. Are you online?\");\n          return;\n        }\n    \n        const data = await fetch(\"https://hms-nist.herokuapp.com/api/razorpay\", {\n            method: \"POST\",\n            headers:{\n                'Content-Type':'application/json',\n            },\n                body: JSON.stringify({\n                    amount:messbill,\n            })\n        }).then((t) => t.json());\n    \n        console.log(data);\n    \n        const options = {\n          key: \"rzp_test_0tpemkHKm5K1Bc\",\n          currency: data.currency,\n          amount: messFee*100,\n          order_id: data.id,\n          name: \"Mess Fees\",\n          description: \"Amount To Be Paid For Hostel Room Service\",\n          handler: function (response) {\n            // alert(response.razorpay_payment_id);\n            // alert(response.razorpay_order_id);\n            // alert(response.razorpay_signature);\n            deductAmount();\n            async function deductAmount(event){\n                const response = await fetch('https://hms-nist.herokuapp.com/api/paymessbill',{\n                    method: 'POST',\n                    headers:{\n                        'Content-Type':'application/json',\n                    },\n                    body: JSON.stringify({\n                        messFee,\n                        roll\n                    })\n                })\n        \n                const data = await response.json()\n        \n                if(data.status=='ok'){\n                    alert(\"Fees Paid\");\n                    window.location.href=\"mybill\"\n                }\n        \n            }\n\n          },\n          prefill: {\n            name: \"Your Name\",\n            email: \"email@example.com\",\n            phone_number: \"1234567890\",\n          },\n        };\n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n      }\n\n    return(\n        <div>\n          <Header/>\n          <div className=\"box\">\n            <h1>My Bill</h1>\n            <p>Roll Number: {roll}</p>\n            <p>Hostel Charges: {hostelbill}</p>\n            <p>Mess Charges: {messbill}</p>\n            <input className=\"input-control2 rounded-pill\" type=\"number\" placeholder=\"Enter Hostel Fee Amount\" value={roomFee} onChange={(e)=>setRoomFee(e.target.value)}></input>\n            <button className=\"btn-control btn btn-dark rounded-pill\" onClick={showRazorpay}><i className=\"fas fa-money-check\"></i> Pay Hostel Fee</button><br/><br/>\n            <input className=\"input-control2 rounded-pill\" type=\"number\" placeholder=\"Enter Mess Fee Amount\" value={messFee} onChange={(e)=>setMessFee(e.target.value)}></input>\n            <button className=\"btn-control btn btn-light rounded-pill\" onClick={showRazorpayMess}><i className=\"fas fa-money-check\"></i> Pay Mess Fee</button><br/><br/>\n            <button className=\"btn-control btn btn-dark rounded-pill\" onClick={goBack}><i className=\"fas fa-arrow-left\"></i>  Go Back</button>\n          </div>\n        </div>\n    )\n} \n\nexport default MyBill;","import React from \"react\";\nimport ReactToPdf from \"react-to-pdf\";\nimport Header from './Header.js'\n\nconst item=[];\n\nexport default class Fetch extends React.Component{\n    \n    state={\n        loading: true,\n        person: null,\n    }\n\n    async componentDidMount(x){\n        const url=\"https://hms-nist.herokuapp.com/api/generatereport\"\n        const response = await fetch(url);\n        const data = await response.json();\n        if(x==null){\n            for(let i=0;i<=data.user.length;i=i+1){\n                this.setState({person: data, loading: false})\n                item.push(data.user[i]);\n                // console.log(data.user.length-1);\n            }\n        }\n        else if(x!=null){\n            item.length=0;\n            const b = data.user.length;\n            \n            for(let i=0;i<b;i=i+1){\n                this.setState({person: data, loading: false})\n                \n                if(data.user[i].room == x || data.user[i].block.toUpperCase()==x.toUpperCase()){\n                    item.push(data.user[i]);\n                }\n                if(x.toLowerCase()==\"boys wing\" && data.user[i].room ==10){\n                    item.push(data.user[b-1]);\n                }\n            }\n        }  \n    }\n    \n    goback() {\n        window.location.href=\"/wardendashboard\"\n    }\n\n    refreshPage(){\n        window.location.href=\"/generatereport\"\n    }\n\n    render(){\n        const len=item.length; // To Calculate the total number of rooms present\n        var occupants=0;\n        for(var i=0;i<item.length;i=i+1){\n            occupants=occupants+item[i].occupancy;\n        }\n\n        const ref = React.createRef();\n        const options = {\n            orientation: 'landscape',\n        };\n\n        const headingStyle={\n            marginTop:\"2%\",\n            marginBottom:\"1%\"\n        }\n\n        const clearStyle={\n            float:\"left\",\n            marginTop:\"10%\",\n            marginBottom:\"5%\",\n            borderRadius:\"25px\",\n            height:\"45% \"\n        }\n\n        const inputSearch={\n            borderRadius:\"25px\"\n        }\n\n        const tableStyle={\n            textAlign:\"center\",\n            margin: \"0 auto\",\n            width:\"40%\"\n        }\n\n        return (\n            <div>\n                <Header />\n                <div className=\"box\">\n                    \n                    <div style={{width: \"100%\", height: \"100%\", textAlign: \"center\"}} ref={ref}>\n                        \n                        <h1 style={headingStyle}>Hostel Report</h1>\n\n                        <div className=\"row\">\n                            <div className=\"col-lg-6\" style={{backgroundColor:\"white\", width:\"25%\", textAlign:\"center\", marginRight:\"7%\", marginLeft:\"17%\", paddingTop:\"0.9%\", color:\"black\", borderRadius:\"25px\", marginTop:\"2%\", marginBottom:\"0%\", border:\"1px solid black\"}}>\n                                <p>Total Number of Rooms: {len}</p>\n                            </div>\n                            <div className=\"col-lg-6\" style={{backgroundColor:\"white\", width:\"25%\", textAlign:\"center\", marginRight:\"7%\", marginLeft:\"10%\", paddingTop:\"0.9%\", color:\"black\", borderRadius:\"25px\", marginTop:\"2%\", marginBottom:\"0%\", border:\"1px solid black\"}}>\n                                <p>Total Number of Students: {occupants}</p>\n                            </div>\n                        </div><br/>\n                        \n                        {/* Input and Clear Button */}\n                                <input className=\"search-bar rounded-pill\" type=\"text\" placeholder=\" &#xf002; Search\"\n                                onChange={(evt) => {var x=evt.target.value; \n                                this.componentDidMount(x) }} />\n                                <button className=\"btn btn-dark clr-btn rounded-pill\" onClick={this.refreshPage}>Clear</button>\n                                <br/><br/>\n                        <div>\n                        \n                            <table style={tableStyle} className=\"table table-borderless\">\n                                <thead>\n                                    <tr className=\"row\" style={{backgroundColor:\"#46244C\",color:\"white\", marginTop:\"2%\"}}>\n                                        <th className=\"col\">Block</th>\n                                        <th className=\"col\">Room</th>\n                                        <th className=\"col\">Occupancy</th>\n                                    </tr>\n                                </thead>\n                                \n                                <div>{item.map(i=>\n                                    <tr className=\"row\">\n                                        <td className=\"col\">{i.block}</td> \n                                        <td className=\"col\">{i.rid}</td>\n                                        <td className=\"col\">{i.occupancy}</td>\n                                    </tr>\n                                )}</div>\n                            </table>\n                        </div> \n                    </div>\n\n                    {/* Lower Two Buttons */}\n                    <div className=\"row\" style={{marginTop:\"4%\",marginBottom:\"3%\"}}>\n                        <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                            <button className=\"btn btn-dark btn-control rounded-pill\" style={{float:\"right\"}} onClick={this.goback}><i className=\"fas fa-arrow-left\"></i> Go Back</button>\n                        </div>\n                        <div className=\"col-lg-6 col-md-6 col-sm-6\">\n                            <ReactToPdf options={options} targetRef={ref} filename=\"Hostel-Report.pdf\">\n                                {({toPdf}) => (\n                                    <button className=\"btn btn-light btn-control rounded-pill\" style={{float:\"left\"}} onClick={toPdf}><i className=\"fas fa-print\"></i> PDF</button>\n                                )}\n                            </ReactToPdf>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport StudentDashboard from './pages/StudentDashboard';\nimport Logout from './pages/Logout';\nimport AdminDashboard from './pages/AdminDashboard';\nimport WardenDashboard from './pages/WardenDashboard';\nimport Notice from './components/Notice';\nimport NoticeDisplay from './components/NoticeDisplay';\nimport StudentRegistration from './pages/StudentRegistration';\nimport FrontPage from './pages/FrontPage';\nimport StudentLogin from './pages/StudentLogin';\nimport StudentDetails from './pages/StudentDetails';\nimport AdminNotice from './components/AdminNotice';\nimport RoomAllotment from './components/RoomAllotment';\nimport AllottedStudents from './components/AllottedStudents';\nimport StaffDashboard from './pages/StaffDashboard';\nimport MenuDisplay from './components/MenuDisplay';\nimport Vendor from './components/Vendor';\nimport VendorDisplay from './components/VendorDisplay';\nimport RoomClean from './components/RoomClean';\nimport MessBill from './components/MessBill';\nimport MyBill from './components/MyBill';\nimport HostelBill from './components/HostelBill';\nimport ForgotPassword from './components/ForgotPassword';\nimport StudentUpdate from './components/StudentUpdate';\nimport GenerateReport from './components/GenerateReport';\nimport MenuUpdate from './components/MenuUpdate';\nimport StudentMyDetails from './components/StudentMyDetails'\n\n\n//Route is the conditionally shown component that renders some UI when its path matches the current URL.\n// Browserrouter is a router that uses the HTML5 history API (pushState, replaceState and the popstate event) to keep your UI in sync with the URL.\nconst App = () => {\n\treturn (\n\t\t<div>\t\n\t\t\t<Router>\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"/\" element = {<FrontPage/>} />\n\t\t\t\t\t<Route path=\"/studentlogin\" element={<StudentLogin/>} />\n\t\t\t\t\t{/* <Route path=\"/login\" exact component={Login} />\n\t\t\t\t\t<Route path=\"/register\" exact component={Register} />\n\t\t\t\t\t<Route path=\"/studentdashboard\" exact component={StudentDashboard} />\n\t\t\t\t\t<Route path=\"/logout\" exact component={Logout} />\n\t\t\t\t\t<Route path=\"/admindashboard\" exact component={AdminDashboard} />\n\t\t\t\t\t<Route path=\"/wardendashboard\" exact component={WardenDashboard} />\n\t\t\t\t\t<Route path=\"/notice\" exact component={Notice} />\n\t\t\t\t\t<Route path=\"/noticedisplay\" exact component={NoticeDisplay} />\n\t\t\t\t\t<Route path=\"/studentregistration\" exact component={StudentRegistration} />\n\t\t\t\t\t\n\n\t\t\t\t\t<Route path=\"/studentdetails\" exact component={StudentDetails} />\n\t\t\t\t\t<Route path=\"/adminNotice\" exact component={AdminNotice} />\n\t\t\t\t\t<Route path=\"/roomallotment\" exact component={RoomAllotment} />\n\t\t\t\t\t<Route path=\"/allottedstudents\" exact component={AllottedStudents} />\n\t\t\t\t\t<Route path=\"/staffdashboard\" exact component={StaffDashboard} />\n\t\t\t\t\t<Route path=\"/menudisplay\" exact component={MenuDisplay} />\n\t\t\t\t\t<Route path=\"/vendor\" exact component={Vendor} />\n\t\t\t\t\t<Route path=\"/vendordisplay\" exact component={VendorDisplay} />\n\t\t\t\t\t<Route path=\"/roomclean\" exact component={RoomClean} />\n\t\t\t\t\t<Route path=\"/messbill\" exact component={MessBill} />\n\t\t\t\t\t<Route path=\"/mybill\" exact component={MyBill} />\n\t\t\t\t\t<Route path=\"/hostelbill\" exact component={HostelBill} />\n\t\t\t\t\t<Route path=\"/forgotpassword\" exact component={ForgotPassword} />\n\t\t\t\t\t<Route path=\"/studentupdate\" exact component={StudentUpdate} />\n\t\t\t\t\t<Route path=\"/generatereport\" exact component={GenerateReport} />\n\t\t\t\t\t<Route path=\"/menuupdate\" exact component={MenuUpdate}/>\n\t\t\t\t\t<Route path=\"/studentmydetails\" exact component={StudentMyDetails}/> */}\n\t\t\t\t</Routes>\n\t\t\t</Router>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}